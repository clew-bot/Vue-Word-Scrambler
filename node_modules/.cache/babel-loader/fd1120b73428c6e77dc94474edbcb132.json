{"remainingRequest":"/Users/chadlew/Desktop/word-scrambler/node_modules/babel-loader/lib/index.js!/Users/chadlew/Desktop/word-scrambler/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/chadlew/Desktop/word-scrambler/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chadlew/Desktop/word-scrambler/src/components/WordScrambler.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chadlew/Desktop/word-scrambler/src/components/WordScrambler.vue","mtime":1653525556959},{"path":"/Users/chadlew/Desktop/word-scrambler/babel.config.js","mtime":1653512099083},{"path":"/Users/chadlew/Desktop/word-scrambler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chadlew/Desktop/word-scrambler/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chadlew/Desktop/word-scrambler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chadlew/Desktop/word-scrambler/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL2NoYWRsZXcvRGVza3RvcC93b3JkLXNjcmFtYmxlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9jaGFkbGV3L0Rlc2t0b3Avd29yZC1zY3JhbWJsZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJXb3JkU2NyYW1ibGVyIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgd29yZHM6IFtdLAogICAgICBjb3VudGVyOiAxLAogICAgICBzZW50ZW5jZTogIiIsCiAgICAgIGN1cnJlbnRHdWVzczogW10sCiAgICAgIGZpcnN0Um93OiB7CiAgICAgICAgMDogIiIsCiAgICAgICAgMTogIiIKICAgICAgfSwKICAgICAgZ2VsbG86ICJobyIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRXb3JkczogZnVuY3Rpb24gZ2V0V29yZHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZSwgX3lpZWxkJHJlc3BvbnNlJGpzb24sIHNlbnRlbmNlOwoKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cHM6Ly9hcGkuaGF0Y2h3YXlzLmlvL2Fzc2Vzc21lbnQvc2VudGVuY2VzLyIuY29uY2F0KF90aGlzLmNvdW50ZXIpLCB7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICAgICAgICAgICAgIEFjY2VwdDogImFwcGxpY2F0aW9uL2pzb24iCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF95aWVsZCRyZXNwb25zZSRqc29uID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHNlbnRlbmNlID0gX3lpZWxkJHJlc3BvbnNlJGpzb24uZGF0YS5zZW50ZW5jZTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHNlbnRlbmNlKTsKICAgICAgICAgICAgICAgIF90aGlzLnNlbnRlbmNlID0gc2VudGVuY2U7CiAgICAgICAgICAgICAgICBzZW50ZW5jZS5zcGxpdCgiICIpLmZvckVhY2goZnVuY3Rpb24gKHdvcmQpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMud29yZHMucHVzaCh3b3JkKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMud29yZHMpOwogICAgICAgICAgICAgICAgX3RoaXMuZmlyc3RSb3cgPSBfdGhpcy53b3Jkc1swXSArICIiOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkZpcnN0IHJvdyAiLCBfdGhpcy5maXJzdFJvdyk7IC8vIEp1bWJsZSB3b3JkcwogICAgICAgICAgICAgICAgLy8gICAgICBmb3IodmFyIGkgPSB0aGlzLndvcmRzLmxlbmd0aCAtIDE7IGkgPiAwOyBpLS0pIHsKICAgICAgICAgICAgICAgIC8vICAgICB2YXIgaiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChpICsgMSkpOwogICAgICAgICAgICAgICAgLy8gICAgIHZhciB0bXAgPSB0aGlzLndvcmRzW2ldOwogICAgICAgICAgICAgICAgLy8gICAgIHRoaXMud29yZHNbaV0gPSB0aGlzLndvcmRzW2pdOwogICAgICAgICAgICAgICAgLy8gICAgIHRoaXMud29yZHNbal0gPSB0bXA7CiAgICAgICAgICAgICAgICAvLyB9CiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLndvcmRzKTsKICAgICAgICAgICAgICAgIC8vIHJldHVybiB0aGlzLndvcmRzLmpvaW4oIiIpOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJrZXl1cCIsIGZ1bmN0aW9uIChlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgdmFyIGtleSA9IGUua2V5Q29kZSA9PSAxMyA/ICJ7ZW50ZXJ9IiA6IGUua2V5Q29kZSA9PSA4ID8gIntia3NwfSIgOiBTdHJpbmcuZnJvbUNoYXJDb2RlKGUua2V5Q29kZSkudG9Mb3dlckNhc2UoKTsKICAgICAgY29uc29sZS5sb2coa2V5KTsKICAgICAgX3RoaXMyLmN1cnJlbnRHdWVzcyA9IGtleTsKICAgICAgY29uc29sZS5sb2coX3RoaXMyLmN1cnJlbnRHdWVzcyk7IC8vIG9uY2UgbGV0dGVyIGlzIHBpY2tlZCBjaGVjayBpZiBpdCdzIGluIHRoZSB3b3JkIC8vCiAgICB9KTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;EACAA,qBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,SADA;MAEAC,UAFA;MAGAC,YAHA;MAIAC,gBAJA;MAKAC;QAAA;QAAA;MAAA,CALA;MAMAC;IANA;EASA,CAZA;EAaAC;IACAC,QADA,sBACA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,8DACA,aADA,GAEA;kBACAC,aADA;kBAEAC;oBACA,kCADA;oBAEAC;kBAFA;gBAFA,CAFA,CADA;;cAAA;gBACAC,QADA;gBAAA;gBAAA,OAaAA,eAbA;;cAAA;gBAAA;gBAYAV,QAZA,wBAYAH,IAZA,CAYAG,QAZA;gBAcAW;gBACA;gBACAX;kBACA;gBACA,CAFA;gBAIAW;gBACA;gBACAA,0CAtBA,CAwBA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;;cAhCA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAkCA;EAnCA,CAbA;EAkDAC,OAlDA,qBAkDA;IAAA;;IACAC;MACAC;MACA,UACAA,kBACA,SADA,GAEAA,iBACA,QADA,GAEAC,4CALA;MAMAJ;MACA;MACAA,iCAVA,CAWA;IACA,CAZA;EAaA;AAhEA","names":["name","data","words","counter","sentence","currentGuess","firstRow","gello","methods","getWords","fetch","method","headers","Accept","response","console","mounted","window","e","String"],"sourceRoot":"src/components","sources":["WordScrambler.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>Word Scrambler</h1>\n    <button @click=\"getWords\">Click</button>\n    <h1>{{sentence}}</h1>\n    <div class=\"container\">\n      <div class=\"firstRow\" >\n        <div class=\"box1\" v-for=\"i in 2\" :key=\"i\" :value=\"currentGuess\">{{currentGuess[i]}}</div>\n        <!-- <div class=\"box1\">Test</div> -->\n      </div>\n      <div class=\"secondRow\">\n        <div class=\"box2\">Test</div>\n        <div class=\"box2\">Test</div>\n        <div class=\"box2\">Test</div>\n        <div class=\"box2\">Test</div>\n        <div class=\"box2\">Test</div>\n      </div>\n      <div class=\"thirdRow\">\n        <div class=\"box3\">Test</div>\n        <div class=\"box3\">Test</div>\n        <div class=\"box3\">Test</div>\n        <div class=\"box3\">Test</div>\n        <div class=\"box3\">Test</div>\n        <div class=\"box3\">Test</div>\n        <div class=\"box3\">Test</div>\n        <div class=\"box3\">Test</div>\n        <div class=\"box3\">Test</div>\n      </div>\n      <div class=\"fourthRow\">\n        <div class=\"box4\">Test</div>\n        <div class=\"box4\">Test</div>\n        <div class=\"box4\">Test</div>\n        <div class=\"box4\">Test</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"WordScrambler\",\n  data() {\n    return {\n      words: [],\n      counter: 1,\n      sentence: \"\",\n      currentGuess: [],\n      firstRow: { 0: \"\", 1: \"\"},\n      gello: \"ho\"\n\n    };\n  },\n  methods: {\n    async getWords() {\n      const response = await fetch(\n        `https://api.hatchways.io/assessment/sentences/${this.counter}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      );\n      const {\n        data: { sentence },\n      } = await response.json();\n      console.log(sentence);\n      this.sentence = sentence;\n      sentence.split(\" \").forEach((word) => {\n        this.words.push(word);\n      });\n\n      console.log(this.words);\n      this.firstRow = this.words[0] + \"\";\n      console.log(\"First row \", this.firstRow);\n\n      // Jumble words\n    //      for(var i = this.words.length - 1; i > 0; i--) {\n    //     var j = Math.floor(Math.random() * (i + 1));\n    //     var tmp = this.words[i];\n    //     this.words[i] = this.words[j];\n    //     this.words[j] = tmp;\n    // }\n    // console.log(this.words);\n    // return this.words.join(\"\");\n\n    },\n  },\n  mounted() {\n   window.addEventListener(\"keyup\", (e) => {\n    e.preventDefault();\n    let key =\n      e.keyCode == 13\n        ? \"{enter}\"\n        : e.keyCode == 8\n        ? \"{bksp}\"\n        : String.fromCharCode(e.keyCode).toLowerCase();\n    console.log(key);\n    this.currentGuess = key;\n    console.log(this.currentGuess);\n    // once letter is picked check if it's in the word //\n  });\n  },\n};\n</script>\n\n<style scoped>\n.box1 {\n  background: rgb(203, 199, 199);\n  width: 23rem;\n  height: 4rem;\n  margin: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.box2 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgb(203, 199, 199);\n  width: 8.8rem;\n  height: 4rem;\n  margin: 5px;\n}\n\n.box3 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgb(203, 199, 199);\n  width: 4.6rem;\n  height: 4rem;\n  margin: 5px;\n}\n\n.box4 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgb(203, 199, 199);\n  width: 11.1rem;\n  height: 4rem;\n  margin: 5px;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background: white;\n  margin-left: 200px;\n  margin-right: 200px;\n  padding: 100px;\n  border-radius: 10px;\n}\n\n.firstRow {\n  display: flex;\n}\n\n.secondRow {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.thirdRow {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.fourthRow {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n}\n</style>\n"]}]}